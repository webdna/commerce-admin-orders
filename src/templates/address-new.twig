{% extends "commerce-admin-orders/_layouts/modal" %}
{% import "_includes/forms" as forms %}

{% block actionButton %}
	{% if fullPageForm %}

		<a href="{{cpUrl('commerce-admin-orders/orders/address?orderNumber='~order.number) }}" class="btn" style="margin-right:7px">{{ 'Cancel'|t('app') }}</a>

		<input type="submit" class="btn submit" value="{{ 'Continue'|t('app') }}">

	{% endif %}
{% endblock %}

{% block content %}


<input type="hidden" name="action" value="commerce-admin-orders/orders/save-address">
<input type="hidden" name="orderNumber" value="{{ order.number }}">
{{ redirectInput(cpUrl()~'/commerce-admin-orders/orders/address?orderNumber={number}') }}

<div class="flex" style="align-items: flex-start;">
	<div class="flex-grow">
		{% if settings.googleApiKey ?? false %}
			{{ forms.textField({
			id: 'addressLookup',
			name: 'addressLookup',
			label: 'Address Lookup',
			placeholder: 'Please start typing your address...',
		}) }}
		{% endif %}
	</div>
</div>

<div class="flex" style="align-items: flex-start;">
	<div class="flex-grow">
		{{ forms.textField({
			id: 'firstname',
			name: type~'[firstName]',
			label: 'Firstname',
			required: true,
			value: model.firstName ?? null,
			errors: model.getErrors('firstName'),
		}) }}
		{{ forms.textField({
			id: 'lastname',
			name: type~'[lastName]',
			label: 'Lastname',
			required: true,
			value: model.lastName ?? null,
			errors: model.getErrors('lastName'),
		}) }}
		{{ forms.textField({
			id: 'business',
			name: type~'[businessName]',
			label: 'Business Name',
			required: false,
			value: model.businessName ?? null,
			errors: model.getErrors('businessName'),
		}) }}
		{{ forms.textField({
			id: 'businessTaxId',
			name: type~'[businessTaxId]',
			label: 'Business Tax Number',
			required: false,
			value: model.businessTaxId ?? null,
			errors: model.getErrors('businessTaxId'),
		}) }}
		{{ forms.textField({
			id: 'phone',
			name: type~'[phone]',
			label: 'Phone',
			required: false,
			value: model.phone ?? null,
			errors: model.getErrors('phone'),
		}) }}
	</div>
	<div class="flex-grow">
		{{ forms.textField({
			id: 'address1',
			name: type~'[address1]',
			label: 'Address Line 1',
			required: true,
			value: model.address1 ?? null,
			errors: model.getErrors('address1'),
		}) }}
		{{ forms.textField({
			id: 'address2',
			name: type~'[address2]',
			label: 'Address Line 2',
			required: false,
			value: model.address2 ?? null,
			errors: model.getErrors('address2'),
		}) }}
		{{ forms.textField({
			id: 'city',
			name: type~'[city]',
			label: 'City',
			required: true,
			value: model.city ?? null,
			errors: model.getErrors('city'),
		}) }}
		 {{ forms.selectField({
            label: 'State'|t('commerce'),
            id: 'stateValue',
            name: type~'[stateValue]',
            value: model.stateValue,
            errors: model.getErrors('stateValue'),
            class: 'selectize fullwidth'
        }) }}
		{{ forms.textField({
			id: 'zipCode',
			name: type~'[zipCode]',
			label: 'Zip Code',
			required: true,
			value: model.zipCode ?? null,
			errors: model.getErrors('zipCode'),
		}) }}
		{{ forms.selectField({
			id: 'country',
			name: type~'[countryId]',
			label: 'Country',
			required: true,
			options: craft.commerce.countries.getAllEnabledCountriesAsList(),
			value: model.country ?? null,
			errors: model.getErrors('country'),
		}) }}
	</div>
</div>

{% if settings.googleApiKey ?? false %}
	<script src='https://maps.googleapis.com/maps/api/js?key={{ settings.googleApiKey }}&libraries=places'></script>
{% endif %}

{% set states = craft.commerce.states.getAllEnabledStates() %}

 {% js %}
		var $states = $('#stateValue-field').find('select').selectize({
			valueField: 'id',
			create: true,
			items: ['{{ model.stateValue }}'],
			options: {{ states|json_encode|raw }},
			labelField: 'name',
			searchField: ['name'],
			dropdownParent: 'body',
			inputClass: 'selectize-input text',
			allowEmptyOption: false
		});

        {# window.states = {{ craft.commerce.states.allStates|values|json_encode|raw }};

        window.states.push({'name': '{{ model.stateValue }}', 'id': '{{ model.stateValue }}'});

        var $states = $('#stateValue-field').find('select').selectize({
            valueField: 'id',
            create: true,
            items: ['{{ model.stateValue }}'],
            options: window.states,
            labelField: 'name',
            searchField: ['name'],
            dropdownParent: 'body',
            inputClass: 'selectize-input text',
            allowEmptyOption: false
        }); #}

		{# var $select = $('#stateValue-field').selectize(), #}

		{% if settings.googleApiKey ?? false %}
			if($('#addressLookup')[0]) {

				var autocomplete,
					$addressLookup = $('#addressLookup');

				autocomplete = new google.maps.places.Autocomplete($addressLookup[0], { types: ['geocode', 'establishment'] });
				autocomplete.setFields(['address_component']);
				autocomplete.addListener('place_changed', function() {
					var place = autocomplete.getPlace();
					console.log(place);

					var address = {
						address1: '',
						address2: '',
						city: '',
						stateName: '',
						zipCode: ''
					};
					var business = false;

					for (var i = 0; i < place.address_components.length; i++) {

						var addressType = place.address_components[i].types[0];

						if (addressType == 'subpremise') {
							address.address1 = place.address_components[i].long_name;
						}
						if (addressType == 'premise') {
							business = true;
							address.address1 += ' ' + place.address_components[i].long_name;
						}

						if (addressType == 'street_number') {
							if (business) {
								address.address2 = place.address_components[i].long_name;
							} else {
								address.address1 = place.address_components[i].long_name;
							}
						}
						if (addressType == 'route') {
							if (business) {
								address.address2 += ' ' + place.address_components[i].long_name;
							} else {
								address.address1 += ' ' + place.address_components[i].long_name;
							}
						}

						if (addressType == 'locality') {
							if (!business) {
								address.address2 = place.address_components[i].long_name;
							}
						}

						if (addressType == 'postal_town') {
							address.city = place.address_components[i].long_name;
						}
						if (addressType == 'administrative_area_level_2') {
							var	selectize = $states[0].selectize;

							if(selectize.search(place.address_components[i].long_name).items[0]) {
								selectize.setValue(selectize.search(place.address_components[i].long_name).items[0].id);
							} else {
								{# add new state if not in dropdown #}
								selectize.addOption({
									id:place.address_components[i].long_name,
									name:place.address_components[i].long_name
								});
								selectize.refreshOptions();
								selectize.addItem(place.address_components[i].long_name)
							}
						}
						if (addressType == 'postal_code') {
							address.zipCode = place.address_components[i].long_name;
						}
						if (addressType == 'country') {
							address.country = place.address_components[i].long_name;
						}
					}

					for (var property in address) {
						$('#' + property).val(address[property]);
					}

					//country
					$('#country option').each(function(i) {
						if (this.text == address.country) {
							$('#country')[0].selectedIndex = i;
						}
					});
				});
			}
		{% endif %}
    {% endjs %}

{% endblock %}

{% do view.registerAssetBundle("craft\\commerce\\web\\assets\\commercecp\\CommerceCpAsset") %}